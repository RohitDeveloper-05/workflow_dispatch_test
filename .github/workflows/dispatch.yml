on:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      # # don't push this to repo its not needed git hub vm contains awscli in-built
      # - name: Install AWS CLI (for local act testing)
      #   run: |
      #     sudo apt-get update && sudo apt-get install -y awscli

      - name: Install dependencies
        run: npm i
      - name: Install Supabase JS client
        run: npm install @supabase/supabase-js

      - name: Fetch S3 URL and download hidden test
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_KEY }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          node -e "
          const { createClient } = require('@supabase/supabase-js');
          const { execSync } = require('child_process');
          const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY);

          (async () => {
           const { data, error } = await supabase
            .from('assessments')           
            .select('*')                
            .eq('name', process.env.REPO_NAME); 
 
            if (error) {
              console.error(' Supabase error:', error);
              process.exit(1);
            }

            const url = data[0]?.hidden_test_cases_link;
            if (!url) {
              console.error(' No S3 URL found.');
              process.exit(1);
            }

            // Removed console.log to hide S3 URL
            execSync(\`curl -f -o tests/test-case-private.test.js \"\${url}\"\`, { stdio: 'inherit' });
          })();
          "

      - name: Make script executable
        run: chmod +x scripts/run-tests.sh

      - name: Run tests with minimal output
        run: scripts/run-tests.sh
        continue-on-error: true

      - name: Show Test Summary (Passed/Failed/Total)
        run: |
          echo "Test Summary:"
          cat ./results.json | jq '{
            passed: .numPassedTests,
            failed: .numFailedTests,
            total: .numTotalTests
          }'
      # - name: Upload results to Supabase
      #   env:
      #     SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      #     SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
      #     ASSESSMENT_ID: ${{ secrets.ASSESSMENT_ID }}
      #   run: scripts/update-results.sh
        